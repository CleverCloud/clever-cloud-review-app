name: 'Clever Cloud review app on PRs'
description: 'Deploy a review app on Clever Cloud when a PR is opened'

inputs:
  type:  
    description: 'Which type of app to create'
    required: true
  name:
    description: 'The name of your app'
    required: true
    default: ${{ github.event.pull_request.base.repo.name }}-PR-${{ github.event.number }}
  alias:
    description: 'The alias of your app'
    required: true
    default: ${{ github.event.pull_request.base.repo.name }}-PR-${{ github.event.number }}
  region:
    description: 'The region to deploy on'
    required: true
    default: 'par'
  organization:
    description: 'The organization to deploy on'
    required: true
    default: $ORGA_ID
  domain:
    description: 'The domain to use for the app'
    required: false
    default: ${{ github.event.pull_request.base.repo.name }}-PR-${{ github.event.number }}.cleverapps.io
  set-env:
    description: 'Set environment variables'
    type: boolean
    required: false
    default: false
  environment:
        description: 'Environment to run tests against'
        type: environment
        required: true
        default: ''
runs:
  using: "composite"
  steps:
    - name: Install clever-tools
      shell: bash
      run: npm install -g clever-tools
    - name: Execute commands based on action
      run: |
        if [ "${{ github.event.action }}" = 'opened' ] || [ "${{ github.event.action }}" = 'reopened' ]; then
          clever create --type ${{ inputs.type }} ${{ inputs.name }} --alias ${{ inputs.alias }} --region ${{ inputs.region }} --org ${{ inputs.organization }}
          clever domain add ${{ inputs.domain }}
          # Only select environment variables with GH_ prefix
          # to exclude GitHub runner variables
          if ${{ inputs.set-env }}; then
          # Remove prefix from print
            for var in $(env | awk -F= '/^GH_/ { print $1 }')
            do
              real_var=${var#GH_}
              # Inject variable in the app on Clever Cloud
              clever env set $real_var "${!var}"
            done

            clever deploy
          fi
        elif [ "${{ github.event.action }}" = 'synchronize' ]; then
          clever link -o "$ORGA_ID" ${{ inputs.name }}
          clever deploy --force
        elif [ "${{ github.event.action }}" = 'closed' ]; then
          clever link -o "$ORGA_ID" ${{ inputs.name }}
          clever delete --alias ${{ inputs.alias }}
        fi
      shell: bash