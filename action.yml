name: 'Clever Cloud review app on PRs'
description: 'Deploy a review app on Clever Cloud when a PR is opened'
branding:
  icon: 'upload-cloud'
  color: 'red'

inputs:
  type:
    description: 'Specify the type of application to create'
    required: true
    type: choice
    options:
      - docker
      - elixir
      - frankenphp
      - go
      - gradle
      - haskell
      - jar
      - linux
      - maven
      - meteor
      - node
      - php
      - play1
      - play2
      - python
      - ruby
      - rust
      - sbt
      - static
      - static-apache
      - v
      - war
  flavor:
    description: 'Optional: Specify the application flavor'
    required: false
    type: choice
    options:
      - pico
      - nano
      - XS
      - S
      - M
      - L
      - XL
      - 2XL
      - 3XL
  build-flavor:
    description: 'Optional: Specify the build flavor for the application'
    required: false
    type: choice
    options:
      - pico
      - nano
      - XS
      - S
      - M
      - L
      - XL
      - 2XL
      - 3XL
  name:
    description: 'Optional: The name of your app. Defaults to repo-name-PR-number'
    required: false
    type: string
  alias:
    description: 'Optional: The alias of your app. Defaults to repo-name-PR-number'
    required: false
    type: string
  region:
    description: 'Specify the region where the application will be deployed'
    required: false
    default: par
    type: choice
    options:
      - par
      - parhds
      - scw
      - grahds
      - ldn
      - mtl
      - rbx
      - rbxhds
      - sgp
      - syd
      - wsw
  orga-id:
    description: 'Specify the organization ID where the application will be deployed'
    required: true
    type: string
  domain:
    description: 'Optional: Specify the domain to use for the application. Defaults to a generated domain based on the PR'
    required: false
    type: string
  set-env:
    description: 'Optional: Set environment variables for the application'
    required: false
    default: false
    type: boolean
  comment:
    description: 'Optional: Comment on the PR with a link to the preview app'
    required: false
    default: true
    type: boolean
outputs:
  app-url:
    description: 'URL of the deployed review app'
    value: ${{ steps.set-outputs.outputs.app-url }}
  app-name:
    description: 'Name of the created app'
    value: ${{ steps.set-outputs.outputs.app-name }}
  deployment-status:
    description: 'Status of the deployment'
    value: ${{ steps.set-outputs.outputs.deployment-status }}

runs:
  using: "composite"
  env:
    APP_NAME: ${{ inputs.name || format('{0}-PR-{1}', github.event.pull_request.base.repo.name, github.event.number) }}
    APP_ALIAS: ${{ inputs.alias || format('{0}-PR-{1}', github.event.pull_request.base.repo.name, github.event.number) }}
    APP_DOMAIN: ${{ inputs.domain || format('{0}-PR-{1}.cleverapps.io', github.event.pull_request.base.repo.name, github.event.number) }}
  steps:
    # Create a comment on the PR to notify that the preview app is being deployed.
    - name: Create comment
      if: ${{ (github.event.action == 'opened' || github.event.action == 'reopened') && inputs.comment }}
      uses: peter-evans/create-or-update-comment@v4
      id: cc
      with:
        issue-number: ${{ github.event.number }}
        body: |

          ### :octocat: Preview is deploying...

          Please wait while the preview is deploying on Clever Cloud...

          | ℹ️ Name              | 🔗 Infos & links                           |
          | --------------------| ------------------------------------------|
          | 🌱 Deploying commit  | ${{ github.event.pull_request.head.sha }} |
          | 👁️ Preview           |  **Generating preview app...**            |

    # Install the Clever Cloud CLI tools to interact with the Clever Cloud platform.
    - name: Install clever-tools
      shell: bash
      run: npm install -g clever-tools || { echo "Failed to install clever-tools"; exit 1; }

    # Create and configure the application on Clever Cloud when a PR is opened or reopened.
    - name: Create app
      if: ${{ github.event.action == 'opened' || github.event.action == 'reopened' }}
      shell: bash
      env:
        ORGA_ID: ${{ inputs.orga-id }}
        REGION: ${{ inputs.region }}
      run: |
        clever create --type ${{ inputs.type }} ${{ env.APP_NAME }} --alias ${{ env.APP_ALIAS }} --region ${{ inputs.region }} --org ${{ inputs.orga-id }}
        clever domain add ${{ env.APP_DOMAIN }}

    # Configure the application flavor if it is provided in the inputs.
    - name: Configure flavor
      if: ${{ (github.event.action == 'opened' || github.event.action == 'reopened') && inputs.flavor != '' }}
      shell: bash
      run: |
        clever scale --flavor ${{ inputs.flavor }}

    # Configure the build flavor for the application if it is provided in the inputs.
    - name: Configure build-flavor
      if: ${{ (github.event.action == 'opened' || github.event.action == 'reopened') && inputs.build-flavor != '' }}
      shell: bash
      run: |
        clever scale --build-flavor ${{ inputs.build-flavor }}

    - name: Set environment variables
      if: ${{ (github.event.action == 'opened' || github.event.action == 'reopened') && inputs.set-env }}
      shell: bash
      run: |
       # Remove prefix from environment variables and set them in the app on Clever Cloud
       for var in $(env | awk -F= '/^GH_/ { print $1 }')
       do
        real_var=${var#GH_}
        # Inject variable in the app on Clever Cloud
          clever env set $real_var "${!var}"
       done

    - name: Deploy app
      if: ${{ github.event.action == 'opened' || github.event.action == 'reopened' }}
      shell: bash
      id: deploy
      run: clever deploy || { echo "Deployment failed"; exit 1; }
    # Update the PR comment with a link to the deployed review app once deployment is successful.
    - name: Comment PR
      if: ${{ steps.deploy.outcome == 'success' && inputs.comment }}
      uses: peter-evans/create-or-update-comment@v4
      id: deploy-c
      continue-on-error: true
      env:
        DOMAIN: ${{ env.APP_DOMAIN }}
      with:
        issue-number: ${{ github.event.number }}
        comment-id: ${{ steps.cc.outputs.comment-id }}
        body: |

          ### ✅ Review app deployed

          Check how your changes look like!

          | ℹ️ Name                    | 🔗 Infos & links                          |
          | ------------------------- | -------------------------------------------|
          | 🌱 Latest deployed commit  | ${{ github.event.pull_request.head.sha }} |
          | 👁️ Preview                 | https://${{ env.DOMAIN}}                      |

        reactions: rocket
        edit-mode: replace

    # Update the application on Clever Cloud when new commits are pushed to the PR.
    - name: Update app
      if: ${{ github.event.action == 'synchronize' }}
      shell: bash
      id: update
      run: |
        clever link -o ${{ inputs.orga-id }} ${{ env.APP_NAME }}
        clever deploy --force
    # Find and update the existing comment on the PR with the latest deployment information.
    - name: Find Comment
      if: ${{ inputs.comment }}
      uses: peter-evans/find-comment@v3
      id: fc
      continue-on-error: true
      with:
        issue-number: ${{ github.event.number }}
        comment-author: github-actions[bot]
    - name: Update comment
      if: ${{ steps.update.outcome == 'success' && inputs.comment }}
      uses: peter-evans/create-or-update-comment@v4
      id: update-c
      continue-on-error: true
      env:
        DOMAIN: ${{ env.APP_DOMAIN }}
      with:
        issue-number: ${{ github.event.number }}
        comment-id: ${{ steps.fc.outputs.comment-id }}
        body: |

          ### ✅ Review app deployed

          Check how your changes look like!

          | ℹ️ Name                    | 🔗 Infos & links                          |
          | ------------------------- | ------------------------------------------|
          | 🌱 Latest deployed commit  | ${{ github.event.pull_request.head.sha }} |
          | 👁️ Preview                 | https://${{ env.DOMAIN}}                         |

        reactions: rocket
        edit-mode: replace

    # Set outputs for the action
    - name: Set outputs
      if: ${{ github.event.action == 'opened' || github.event.action == 'reopened' || github.event.action == 'synchronize' }}
      shell: bash
      id: set-outputs
      run: |
        echo "app-url=https://${{ env.APP_DOMAIN }}" >> $GITHUB_OUTPUT
        echo "app-name=${{ env.APP_NAME }}" >> $GITHUB_OUTPUT
        if [[ "${{ steps.deploy.outcome }}" == "success" ]] || [[ "${{ steps.update.outcome }}" == "success" ]]; then
          echo "deployment-status=success" >> $GITHUB_OUTPUT
        else
          echo "deployment-status=failed" >> $GITHUB_OUTPUT
        fi

    - name: Delete app
      if: ${{ github.event.action == 'closed' }}
      shell: bash
      id: delete
      run: |
        clever link -o ${{ inputs.orga-id }} ${{ env.APP_NAME }}
        clever delete --alias ${{ env.APP_ALIAS }} --yes

    - name: Comment PR on deletion
      if: ${{ steps.delete.outcome == 'success' && inputs.comment }}
      uses: peter-evans/create-or-update-comment@v4
      id: delete-c
      continue-on-error: true
      with:
        issue-number: ${{ github.event.number }}
        comment-id: ${{ steps.fc.outputs.comment-id }}
        body: |

          ### 👋 Review app deleted

          You closed this PR and deleted the review app.

        edit-mode: replace
