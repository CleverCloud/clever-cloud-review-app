name: Clever Cloud Review App on Pull Requests

description: Deploy, sync and delete review apps on Clever Cloud for every pull request targeting the `main` branch

on:
  pull_request_target:
    types: [opened, closed, synchronize, reopened]
    branches: [ main ]

# Inject these secrets in your GitHub repository.
# List more secrets if needed, for example: HUGO_VERSION: ${{ secrets.HUGO_VERSION }}
env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  CLEVER_SECRET: ${{ secrets.CLEVER_SECRET }}
  CLEVER_TOKEN: ${{ secrets.CLEVER_TOKEN }}
  ORGA_ID: ${{ secrets.ORGA_ID }}
  HUGO_VERSION: ${{ secrets.HUGO_VERSION }}

jobs:
  deploy:
    if: github.event.action == 'opened'|| github.event.action == 'reopened'
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
      contents: read
    environment:
      name: PR review apps
    steps:
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
      - name: install clever-tools
        run: npm install -g clever-tools
      - name: Create app
      # Use "clever create" to deploy your app.
      # Replace <type>, <app-name> and <region>
        run: | 
          clever create --type <type> <app-name>-${{ env.BRANCH_NAME }} --alias <app-name>-${{ env.BRANCH_NAME }} --region <region> --org ${{secrets.ORGA_ID}}
      - name: Set evironment variables
      # Set environment variable with "clever env set".
      # For example: clever env set CC_WEBROOT "/public"
      # Inject your secrets as well, for ex:
      #clever env set HUGO_VERSION ${{env.HUGO_VERSION}}
        run: |
          clever env set <VARIABLE_NAME> "<variable_value>"
          clever domain add clever-doc-review-${{ env.BRANCH_NAME }}.cleverapps.io
      - name: Set domain
      # Set review app domain with "clever domain add".
      # Replace <app-name>
        run: |
          clever domain add <app-name>-${{ env.BRANCH_NAME }}.cleverapps.io
      - name: Deploy
        run: clever deploy
      # Post your domain in PR's discussion
      # Replace <app-name>
      - name: Comment PR
        uses: actions/github-script@v5
        with:
          script: |
            const issue_number = context.payload.pull_request.number;
            const message = `Deployment has finished üëÅÔ∏èüëÑüëÅÔ∏è Your app is available [here](https://<app-name>-${process.env.BRANCH_NAME}.cleverapps.io)`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: message
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  # Deploy review apps on new commits
  update:
    if: github.event.action == 'synchronize'
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
      pull-requests: write
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  
      - name: install clever-tools
        run: npm install -g clever-tools
      - name: Link and update app
      # Replace <app-name>
        run: | 
          clever link -o ${{ env.ORGA_ID }} <app-name>-${{ env.BRANCH_NAME }}
          clever deploy
      - name: Comment PR
        uses: actions/github-script@v5
        with:
        # Replace <app-name>
          script: |
            const issue_number = context.payload.pull_request.number;
            const message = `üöÄ Your app has been updated and is available [here](https://<app-name>-${process.env.BRANCH_NAME}.cleverapps.io)`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: message
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Delete review app when the PR is closed (merged or not)
  delete:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    if: always() && github.event_name == 'pull_request_target' && github.event.action == 'closed'
    steps:
      - name: install clever-tools
        run: npm install -g clever-tools
      - name: Delete app
      # Replace <app-name>
        run: |
          clever link -o ${{ env.ORGA_ID }} <app-name>-${{ env.BRANCH_NAME }}
          clever delete --alias <app-name>-${{ env.BRANCH_NAME }} --yes
      - name: Comment PR
        uses: actions/github-script@v5
        with:
          script: |
            const issue_number = context.payload.pull_request.number;
            const message = `Your review app has been deleted üëã`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: message
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
