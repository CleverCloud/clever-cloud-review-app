"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetchAccessToken = fetchAccessToken;
exports.getLoginData = getLoginData;
exports.fetchRequestToken = fetchRequestToken;
exports.loginWithEmailAndPassword = loginWithEmailAndPassword;
exports.loginWithMfa = loginWithMfa;

var _pickNonNull = require("../../pick-non-null.js");

/**
 * POST /oauth/access_token
 * @param {Object} params
 * @param {Object} body
 */
function fetchAccessToken(params, body) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'post',
    url: `/v2/oauth/access_token`,
    headers: {
      Accept: 'application/x-www-form-urlencoded',
      'Content-Type': 'application/x-www-form-urlencoded'
    },
    // no query params
    body
  });
}
/**
 * GET /oauth/login_data
 * @param {Object} params
 * @param {String} params.oauth_key
 */


function getLoginData(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'get',
    url: `/v2/oauth/login_data`,
    headers: {
      Accept: 'application/json'
    },
    queryParams: (0, _pickNonNull.pickNonNull)(params, ['oauth_key']) // no body

  });
}
/**
 * POST /oauth/request_token
 * @param {Object} params
 * @param {String} params.clever_flavor
 * @param {String} params.partner_id
 * @param {Object} body
 */


function fetchRequestToken(params, body) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'post',
    url: `/v2/oauth/request_token`,
    headers: {
      Accept: 'application/x-www-form-urlencoded',
      'Content-Type': 'application/x-www-form-urlencoded'
    },
    queryParams: (0, _pickNonNull.pickNonNull)(params, ['clever_flavor', 'partner_id']),
    body
  });
}
/**
 * POST /sessions/login
 * @param {Object} params
 * @param {Object} body
 */


function loginWithEmailAndPassword(params, body) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'post',
    url: `/v2/sessions/login`,
    headers: {
      Accept: 'text/html',
      'Content-Type': 'application/x-www-form-urlencoded'
    },
    // no query params
    body
  });
}
/**
 * POST /sessions/mfa_login
 * @param {Object} params
 * @param {Object} body
 */


function loginWithMfa(params, body) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'post',
    url: `/v2/sessions/mfa_login`,
    headers: {
      Accept: 'text/html',
      'Content-Type': 'application/x-www-form-urlencoded'
    },
    // no query params
    body
  });
}