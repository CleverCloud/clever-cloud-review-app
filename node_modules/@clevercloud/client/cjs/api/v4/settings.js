"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.list = list;
exports._delete = _delete;
exports.get = get;
exports.put = put;

var _pickNonNull = require("../../pick-non-null.js");

/**
 * GET /console/settings
 * @param {Object} params
 * @param {String} params.env
 */
function list(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'get',
    url: `/v4/console/settings`,
    headers: {
      Accept: 'application/json'
    },
    queryParams: (0, _pickNonNull.pickNonNull)(params, ['env']) // no body

  });
}
/**
 * DELETE /console/settings/{name}
 * @param {Object} params
 * @param {String} params.env
 * @param {String} params.name
 */


function _delete(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'delete',
    url: `/v4/console/settings/${params.name}`,
    headers: {},
    queryParams: (0, _pickNonNull.pickNonNull)(params, ['env']) // no body

  });
}
/**
 * GET /console/settings/{name}
 * @param {Object} params
 * @param {String} params.env
 * @param {String} params.name
 */


function get(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'get',
    url: `/v4/console/settings/${params.name}`,
    headers: {
      Accept: 'application/json'
    },
    queryParams: (0, _pickNonNull.pickNonNull)(params, ['env']) // no body

  });
}
/**
 * PUT /console/settings/{name}
 * @param {Object} params
 * @param {String} params.env
 * @param {String} params.name
 * @param {Object} body
 */


function put(params, body) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'put',
    url: `/v4/console/settings/${params.name}`,
    headers: {
      'Content-Type': 'text/plain'
    },
    queryParams: (0, _pickNonNull.pickNonNull)(params, ['env']),
    body
  });
}