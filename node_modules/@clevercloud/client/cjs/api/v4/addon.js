"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getMatomo = getMatomo;
exports.getMatomoVHosts = getMatomoVHosts;
exports.createTardis = createTardis;
exports.deleteTardis = deleteTardis;
exports.getTardis = getTardis;
exports.deleteTardisAddonWithOwner = deleteTardisAddonWithOwner;
exports.getTardisAddonWithOwner = getTardisAddonWithOwner;
exports.revertTardisAddonDeletion = revertTardisAddonDeletion;
exports.deleteTardisAddonToken = deleteTardisAddonToken;
exports.getTardisToken = getTardisToken;
exports.listTardisAddonTokens = listTardisAddonTokens;
exports.createTardisToken = createTardisToken;
exports.listTardisAddons = listTardisAddons;
exports.createTardisAddonWithOwner = createTardisAddonWithOwner;
exports.revokeAndDeleteTardisAddonToken = revokeAndDeleteTardisAddonToken;
exports.getConfigProvider = getConfigProvider;
exports.getConfigProviderEnv = getConfigProviderEnv;
exports.updateConfigProviderEnv = updateConfigProviderEnv;
exports.createMatomo = createMatomo;
exports.deleteMatomo = deleteMatomo;
exports.createTardisAddon = createTardisAddon;
exports.deleteTardisAddon = deleteTardisAddon;
exports.getTardisAddon = getTardisAddon;

var _pickNonNull = require("../../pick-non-null.js");

/**
 * GET /addon-providers/addon-matomo/addons/{matomoId}
 * @param {Object} params
 * @param {String} params.undefined
 */
function getMatomo(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'get',
    url: `/v4/addon-providers/addon-matomo/addons/${params.matomoId}`,
    headers: {
      Accept: 'application/json'
    } // no query params
    // no body

  });
}
/**
 * GET /addon-providers/addon-matomo/token/validate
 * @param {Object} params
 * @param {String} params.keycloakToken
 */


function getMatomoVHosts(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'get',
    url: `/v4/addon-providers/addon-matomo/token/validate`,
    headers: {
      Accept: 'application/json'
    },
    queryParams: (0, _pickNonNull.pickNonNull)(params, ['keycloakToken']) // no body

  });
}
/**
 * POST /addon-providers/addon-tardis/addons
 * @param {Object} params
 * @param {String} params.appOnly
 * @param {Object} body
 */


function createTardis(params, body) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'post',
    url: `/v4/addon-providers/addon-tardis/addons`,
    headers: {
      Accept: 'application/json',
      'Content-Type': 'application/json'
    },
    queryParams: (0, _pickNonNull.pickNonNull)(params, ['appOnly']),
    body
  });
}
/**
 * DELETE /addon-providers/addon-tardis/addons/{tardisId}
 * @param {Object} params
 * @param {String} params.undefined
 */


function deleteTardis(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'delete',
    url: `/v4/addon-providers/addon-tardis/addons/${params.tardisId}`,
    headers: {} // no query params
    // no body

  });
}
/**
 * GET /addon-providers/addon-tardis/addons/{tardisId}
 * @param {Object} params
 * @param {String} params.undefined
 */


function getTardis(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'get',
    url: `/v4/addon-providers/addon-tardis/addons/${params.tardisId}`,
    headers: {
      Accept: 'application/json'
    } // no query params
    // no body

  });
}
/**
 * DELETE /addon-providers/addon-tardis/organisations/{ownerId}/addon/{tardisId}
 * @param {Object} params
 * @param {String} params.undefined
 * @param {String} params.undefined
 */


function deleteTardisAddonWithOwner(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'delete',
    url: `/v4/addon-providers/addon-tardis/organisations/${params.ownerId}/addon/${params.tardisId}`,
    headers: {} // no query params
    // no body

  });
}
/**
 * GET /addon-providers/addon-tardis/organisations/{ownerId}/addon/{tardisId}
 * @param {Object} params
 * @param {String} params.undefined
 * @param {String} params.undefined
 */


function getTardisAddonWithOwner(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'get',
    url: `/v4/addon-providers/addon-tardis/organisations/${params.ownerId}/addon/${params.tardisId}`,
    headers: {
      Accept: 'application/json'
    } // no query params
    // no body

  });
}
/**
 * POST /addon-providers/addon-tardis/organisations/{ownerId}/addon/{tardisId}/revert
 * @param {Object} params
 * @param {String} params.undefined
 * @param {String} params.undefined
 */


function revertTardisAddonDeletion(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'post',
    url: `/v4/addon-providers/addon-tardis/organisations/${params.ownerId}/addon/${params.tardisId}/revert`,
    headers: {
      Accept: 'application/json'
    } // no query params
    // no body

  });
}
/**
 * DELETE /addon-providers/addon-tardis/organisations/{ownerId}/addon/{tardisId}/token/{tokenId}
 * @param {Object} params
 * @param {String} params.undefined
 * @param {String} params.undefined
 * @param {String} params.undefined
 */


function deleteTardisAddonToken(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'delete',
    url: `/v4/addon-providers/addon-tardis/organisations/${params.ownerId}/addon/${params.tardisId}/token/${params.tokenId}`,
    headers: {} // no query params
    // no body

  });
}
/**
 * GET /addon-providers/addon-tardis/organisations/{ownerId}/addon/{tardisId}/token/{tokenId}
 * @param {Object} params
 * @param {String} params.undefined
 * @param {String} params.undefined
 * @param {String} params.undefined
 */


function getTardisToken(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'get',
    url: `/v4/addon-providers/addon-tardis/organisations/${params.ownerId}/addon/${params.tardisId}/token/${params.tokenId}`,
    headers: {
      Accept: 'application/json'
    } // no query params
    // no body

  });
}
/**
 * GET /addon-providers/addon-tardis/organisations/{ownerId}/addon/{tardisId}/tokens
 * @param {Object} params
 * @param {String} params.undefined
 * @param {String} params.undefined
 * @param {String} params.onlyId
 * @param {String} params.undefined
 * @param {String} params.undefined
 */


function listTardisAddonTokens(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'get',
    url: `/v4/addon-providers/addon-tardis/organisations/${params.ownerId}/addon/${params.tardisId}/tokens`,
    headers: {
      Accept: 'application/json'
    },
    queryParams: (0, _pickNonNull.pickNonNull)(params, ['onlyId']) // no body

  });
}
/**
 * POST /addon-providers/addon-tardis/organisations/{ownerId}/addon/{tardisId}/tokens
 * @param {Object} params
 * @param {String} params.undefined
 * @param {String} params.undefined
 * @param {Object} body
 */


function createTardisToken(params, body) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'post',
    url: `/v4/addon-providers/addon-tardis/organisations/${params.ownerId}/addon/${params.tardisId}/tokens`,
    headers: {
      Accept: 'application/json',
      'Content-Type': 'application/json'
    },
    // no query params
    body
  });
}
/**
 * GET /addon-providers/addon-tardis/organisations/{ownerId}/addons
 * @param {Object} params
 * @param {String} params.undefined
 * @param {String} params.undefined
 * @param {String} params.undefined
 */


function listTardisAddons(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'get',
    url: `/v4/addon-providers/addon-tardis/organisations/${params.ownerId}/addons`,
    headers: {
      Accept: 'application/json'
    } // no query params
    // no body

  });
}
/**
 * POST /addon-providers/addon-tardis/organisations/{ownerId}/addons
 * @param {Object} params
 * @param {String} params.undefined
 * @param {String} params.appOnly
 * @param {Object} body
 */


function createTardisAddonWithOwner(params, body) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'post',
    url: `/v4/addon-providers/addon-tardis/organisations/${params.ownerId}/addons`,
    headers: {
      Accept: 'application/json',
      'Content-Type': 'application/json'
    },
    queryParams: (0, _pickNonNull.pickNonNull)(params, ['appOnly']),
    body
  });
}
/**
 * POST /addon-providers/addon-tardis/token/revoke
 * @param {Object} params
 * @param {Object} body
 */


function revokeAndDeleteTardisAddonToken(params, body) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'post',
    url: `/v4/addon-providers/addon-tardis/token/revoke`,
    headers: {
      'Content-Type': 'application/json'
    },
    // no query params
    body
  });
}
/**
 * GET /addon-providers/config-provider/addons/{configurationProviderId}
 * @param {Object} params
 * @param {String} params.undefined
 */


function getConfigProvider(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'get',
    url: `/v4/addon-providers/config-provider/addons/${params.configurationProviderId}`,
    headers: {
      Accept: 'application/json'
    } // no query params
    // no body

  });
}
/**
 * GET /addon-providers/config-provider/addons/{configurationProviderId}/env
 * @param {Object} params
 * @param {String} params.undefined
 */


function getConfigProviderEnv(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'get',
    url: `/v4/addon-providers/config-provider/addons/${params.configurationProviderId}/env`,
    headers: {
      Accept: 'application/json'
    } // no query params
    // no body

  });
}
/**
 * PUT /addon-providers/config-provider/addons/{configurationProviderId}/env
 * @param {Object} params
 * @param {String} params.undefined
 * @param {Object} body
 */


function updateConfigProviderEnv(params, body) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'put',
    url: `/v4/addon-providers/config-provider/addons/${params.configurationProviderId}/env`,
    headers: {
      Accept: 'application/json',
      'Content-Type': 'application/json'
    },
    // no query params
    body
  });
}
/**
 * POST /v2/providers/addon-matomo/resources
 * @param {Object} params
 * @param {Object} body
 */


function createMatomo(params, body) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'post',
    url: `/v4/v2/providers/addon-matomo/resources`,
    headers: {
      'Content-Type': 'application/json'
    },
    // no query params
    body
  });
}
/**
 * DELETE /v2/providers/addon-matomo/resources/{matomoId}
 * @param {Object} params
 * @param {String} params.undefined
 */


function deleteMatomo(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'delete',
    url: `/v4/v2/providers/addon-matomo/resources/${params.matomoId}`,
    headers: {} // no query params
    // no body

  });
}
/**
 * POST /v2/providers/addon-tardis/resources
 * @param {Object} params
 * @param {Object} body
 */


function createTardisAddon(params, body) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'post',
    url: `/v4/v2/providers/addon-tardis/resources`,
    headers: {
      Accept: 'application/json',
      'Content-Type': 'application/json'
    },
    // no query params
    body
  });
}
/**
 * DELETE /v2/providers/addon-tardis/resources/{tardisId}
 * @param {Object} params
 * @param {String} params.undefined
 */


function deleteTardisAddon(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'delete',
    url: `/v4/v2/providers/addon-tardis/resources/${params.tardisId}`,
    headers: {} // no query params
    // no body

  });
}
/**
 * GET /v2/providers/addon-tardis/resources/{tardisId}
 * @param {Object} params
 * @param {String} params.undefined
 */


function getTardisAddon(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'get',
    url: `/v4/v2/providers/addon-tardis/resources/${params.tardisId}`,
    headers: {
      Accept: 'application/json'
    } // no query params
    // no body

  });
}