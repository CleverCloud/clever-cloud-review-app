"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.listAddonLoadBalancers = listAddonLoadBalancers;
exports.listApplicationLoadBalancers = listApplicationLoadBalancers;

var _pickNonNull = require("../../pick-non-null.js");

/**
 * GET /load-balancers/organisations/{ownerId}/addons/{addonId}/load-balancers/{loadBalancerKind}
 * @param {Object} params
 * @param {String} params.undefined
 * @param {String} params.undefined
 * @param {String} params.undefined
 */
function listAddonLoadBalancers(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'get',
    url: `/v4/load-balancers/organisations/${params.ownerId}/addons/${params.addonId}/load-balancers/${params.loadBalancerKind}`,
    headers: {
      Accept: 'application/json'
    } // no query params
    // no body

  });
}
/**
 * GET /load-balancers/organisations/{ownerId}/applications/{applicationId}/load-balancers/{loadBalancerKind}
 * @param {Object} params
 * @param {String} params.undefined
 * @param {String} params.undefined
 * @param {String} params.undefined
 */


function listApplicationLoadBalancers(params) {
  // no multipath for /self or /organisations/{id}
  return Promise.resolve({
    method: 'get',
    url: `/v4/load-balancers/organisations/${params.ownerId}/applications/${params.applicationId}/load-balancers/${params.loadBalancerKind}`,
    headers: {
      Accept: 'application/json'
    } // no query params
    // no body

  });
}