"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toMicroIsoString = toMicroIsoString;
exports.toMicroTimestamp = toMicroTimestamp;
exports.ONE_SECOND_MICROS = exports.ONE_HOUR_MICROS = void 0;
const ONE_HOUR_MICROS = 60 * 60 * 1000 * 1000;
exports.ONE_HOUR_MICROS = ONE_HOUR_MICROS;
const ONE_SECOND_MICROS = 1000 * 1000;
exports.ONE_SECOND_MICROS = ONE_SECOND_MICROS;

function toMicroIsoString(microTimestamp) {
  const milliTimestamp = Math.floor(microTimestamp / 1000);
  const milliIsoString = new Date(milliTimestamp).toISOString();
  const microSuffix = String(microTimestamp % 1000).padStart(3, '0');
  return milliIsoString.replace(/Z$/, `${microSuffix}Z`);
}

function toMicroTimestamp(isoString) {
  if (isoString == null) {
    return Date.now() * 1000;
  }

  const milliTimestamp = new Date(isoString).getTime();
  const [, microSuffix = '000'] = isoString.match(/\.\d{3}(\d{3})?Z$/);
  const microseconds = Number(microSuffix);
  return milliTimestamp * 1000 + microseconds;
}